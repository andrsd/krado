// SPDX-FileCopyrightText: 2025 David Andrs <andrsd@gmail.com>
// SPDX-License-Identifier: MIT

#pragma once

#include "krado/mesh_vertex_abstract.h"
#include "krado/types.h"

namespace krado {

/// Mesh element (generated by a mesh generator, i.e. not read from a mesh file)
class MeshElement {
public:
    /// Build an element
    ///
    /// @param type Element type
    /// @param vtx Vertices composing the element
    MeshElement(ElementType type, const std::vector<MeshVertexAbstract *> & vtx);

    /// Get element type
    ///
    /// @return Element type
    [[nodiscard]] ElementType type() const;

    /// Get number of vertices
    ///
    /// @return Number of vertices
    [[nodiscard]] int num_vertices() const;

    /// Get vertex from local index
    ///
    /// @param idx Local vertex index
    /// @return Vertex
    [[nodiscard]] MeshVertexAbstract * vertex(int idx) const;

private:
    ElementType type_;
    std::vector<MeshVertexAbstract *> vtx_;
};

} // namespace krado
